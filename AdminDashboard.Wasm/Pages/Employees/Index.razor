@page "/employees/index"
@using AdminDashboard.Wasm.Models.Employee
@inject NavigationManager NavigationManager
@inject HttpClient Http

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Employees</MudText>

<MudButton Icon="@Icons.Material.Filled.Add" Style="margin-bottom: 15px" Color="Color.Primary" OnClick="AddNewEmployee">Add new employee</MudButton>

@if (_employees == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <MudTable RowStyle="cursor: pointer;" Items="@_employees" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" T="EmployeeDetails" OnRowClick="@(contract => EmployeeDetails(contract))">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Surname</MudTh>
            <MudTh>Email Address</MudTh>
            <MudTh>Place Of Work</MudTh>
            <MudTh>Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Surname">@context.Surname</MudTd>
            <MudTd DataLabel="EmailAddress">@context.Email</MudTd>
            <MudTd DataLabel="EmailAddress">@context.CountryOfResidence</MudTd>
            <MudTd>
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Class="ma-2" OnClick="@(() => EditEmployee(context.WalletAddress))" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Class="ma-2" OnClick="@(() => DeleteEmployee(context.WalletAddress))" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 1, 5, 10 }" />
        </PagerContent>
    </MudTable>
}

@code {

    private List<EmployeeDetails> _employees;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            _employees = await Http.GetFromJsonAsync<List<EmployeeDetails>>(Routes.Employee.Index);

            if (_employees is null || _employees.Count == 0) _employees = new List<EmployeeDetails>();
        }
        catch (Exception e)
        {
            Console.Write(e);
            _employees = new List<EmployeeDetails>(0);
        }
    }

    protected void EmployeeDetails(TableRowClickEventArgs<EmployeeDetails> e)
    {
        NavigationManager.NavigateTo($"/employees/{e.Item.WalletAddress}/details");
    }

    protected void AddNewEmployee()
    {
        NavigationManager.NavigateTo("/employees/add");
    }

    protected void EditEmployee(string walletAddress)
    {
        NavigationManager.NavigateTo($"/employees/{walletAddress}/Edit");
    }

    protected void DeleteEmployee(string walletAddress)
    {
        NavigationManager.NavigateTo($"/employees/{walletAddress}/delete");
    }

}